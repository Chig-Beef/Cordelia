program := { statement }

statement :=
    fun ["(" type ref ident ")"] ident "("(type ident ",")+")" block
    mut type ident ["=" expression] el
    const type ident ["=" expression] el
    noas type ident ["=" expression] el
    loop [type ident "=" expression el] [comparison el] [ident "=" expression el] block\
    if comparison block ([elif comparison block])+ [else block]

block := "{" { statement } "}"

ref := "@" | "&"

expression := ident [operator ident]

comparison := ident [boperator ident]

operator := "+" | "-" | "*" | "/" | "%"

boperator := "&" | "|" | "!=" | "==" | "<" | "." | "<=" | ">="

el := ";"